plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id 'kotlin-parcelize'
    id 'kotlin-kapt'

    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

apply from: "$rootDir/constant.gradle"
apply from: "../../../1CorePrivate/config/phonetics/config.gradle"// can remove

android {
    namespace "com.simple.phonetics"
    compileSdk project.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.ipa.english.phonetics"

        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion

        versionCode 81
        versionName "1.2.81"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        keystore {
            keyAlias project.ext.keyAlias // can remove
            keyPassword project.ext.keyPassword // can remove

            storeFile file(project.ext.storeFile) // can remove
            storePassword project.ext.storePassword // can remove
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "EPhoDebug"

            buildConfigField 'boolean', 'DEBUG', 'true'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            resValue "string", "app_name", "EPhonetics"

            buildConfigField 'boolean', 'DEBUG', 'false'
            signingConfig signingConfigs.keystore  // can remove
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility project.ext.javaVersion
        targetCompatibility project.ext.javaVersion
    }
    kotlinOptions {
        jvmTarget = project.ext.javaVersion.toString()
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation project(':dao')
    implementation project(':config:phonetics') // can remove

    implementation koinDependencies.values()
    implementation jacksonDependencies.values()
    implementation androidxDependencies.values()
    implementation retrofit2Dependencies.values()
    implementation hoanganhtuan95Dependencies.values()
    kapt hoanganhtuan95Dependencies.adapter_processor
    kapt hoanganhtuan95Dependencies.deeplink_processor

    // Firebase BOM
    implementation platform(firebaseDependencies.bom)
    implementation firebaseDependencies.ads
    implementation firebaseDependencies.perf
    releaseImplementation firebaseDependencies.config
    releaseImplementation firebaseDependencies.analytics
    releaseImplementation firebaseDependencies.crashlytics

    // Glide
    implementation glideDependencies.glide
    implementation glideDependencies.glide_transformations

    // Room
    implementation roomDependencies.room_ktx
    implementation roomDependencies.room_runtime
    kapt roomDependencies.room_compiler

    // Các thư viện khác
    implementation playDependencies.review
    implementation retrofit2Dependencies.logging_interceptor

    implementation otherDependencies.lottie
    implementation otherDependencies.flexbox
    implementation otherDependencies.permissionx
    implementation otherDependencies.material
    implementation otherDependencies.play_services_ads
    implementation otherDependencies.core_splashscreen
    implementation otherDependencies.keyboardvisibilityevent
}